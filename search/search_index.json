{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introdu\u00e7\u00e3o","text":"<p>Esse projeto foi desenvolvido como trabalho final para a disciplina de Engenharia de Dados</p>"},{"location":"#comecando","title":"Come\u00e7ando \ud83d\ude80","text":"<p>Essas instru\u00e7\u00f5es permitir\u00e3o que voc\u00ea obtenha uma c\u00f3pia do projeto em opera\u00e7\u00e3o na sua m\u00e1quina local para fins de desenvolvimento e teste.</p>"},{"location":"#pre-requisitos","title":"Pr\u00e9-requisitos","text":""},{"location":"#instalacao","title":"Instala\u00e7\u00e3o","text":""},{"location":"#ferramentas-utilizadas","title":"Ferramentas utilizadas","text":""},{"location":"adls/","title":"Arquitetura ADLS","text":""},{"location":"airflow/","title":"Airflow","text":""},{"location":"contributors/","title":"Autores","text":"<ul> <li>Bruno Frelo Venturini - .</li> <li>Eduardo Fraga de Freitas - .</li> <li>Gabriel Ferreira Guinzani - .</li> <li>Gabriel Souza Della Giustina - .</li> <li>Guilherme Savio - .</li> <li>Higor Goulart - .</li> <li>Sofia Martins Silva - Documenta\u00e7\u00e3o.</li> </ul>"},{"location":"etl/","title":"ETL","text":""},{"location":"obt/","title":"Camada Gold - One Big table","text":""},{"location":"obt/#estrutura-das-tabelas","title":"Estrutura das Tabelas","text":"<p>O ambiente consiste em 6 tabelas principais que foram carregadas do armazenamento Delta na camada silver:</p> <ul> <li><code>apolice</code>: Cont\u00e9m informa\u00e7\u00f5es sobre as ap\u00f3lices de seguros.</li> <li><code>sinistro</code>: Cont\u00e9m informa\u00e7\u00f5es sobre os sinistros associados \u00e0s ap\u00f3lices.</li> <li><code>imovel</code>: Cont\u00e9m informa\u00e7\u00f5es sobre os im\u00f3veis assegurados.</li> <li><code>apolice_cobertura</code>: Tabela de associa\u00e7\u00e3o que gerencia o relacionamento muitos-para-muitos entre ap\u00f3lices e coberturas.</li> <li><code>cobertura</code>: Cont\u00e9m informa\u00e7\u00f5es sobre os diferentes tipos de coberturas de seguro.</li> <li><code>avaliacao</code>: Cont\u00e9m avalia\u00e7\u00f5es dos im\u00f3veis.</li> </ul>"},{"location":"obt/#leitura-dos-dados","title":"Leitura dos Dados","text":"<p>Os dados s\u00e3o lidos do armazenamento Delta da camada silver e armazenados em DataFrames do PySpark.</p> <pre><code>from pyspark.sql.functions import year, month, sum, count, avg, format_string, date_format, coalesce, expr, lit\n\nstorageAccountName = \"satcseguroimoveis\"\n\napolice_df = spark.read.format('delta').load(f\"/mnt/{storageAccountName}/silver/apolice\")\nsinistro_df = spark.read.format('delta').load(f\"/mnt/{storageAccountName}/silver/sinistro\")\nimovel_df = spark.read.format('delta').load(f\"/mnt/{storageAccountName}/silver/imovel\")\napolice_cobertura_df = spark.read.format('delta').load(f\"/mnt/{storageAccountName}/silver/apolice_cobertura\")\ncobertura_df = spark.read.format('delta').load(f\"/mnt/{storageAccountName}/silver/cobertura\")\navaliacao_df = spark.read.format('delta').load(f\"/mnt/{storageAccountName}/silver/avaliacao\")\n</code></pre>"},{"location":"obt/#escrita-dos-dados","title":"Escrita dos Dados","text":"<p>Os DataFrames s\u00e3o ent\u00e3o escritos em tabelas Delta para utiliza\u00e7\u00e3o futura.</p> <pre><code>apolice_df.write.format('delta').mode('overwrite').saveAsTable(\"APOLICE\")\nsinistro_df.write.format('delta').mode('overwrite').saveAsTable(\"SINISTRO\")\nimovel_df.write.format('delta').mode('overwrite').saveAsTable(\"IMOVEL\")\napolice_cobertura_df.write.format('delta').mode('overwrite').saveAsTable(\"APOLICE_COBERTURA\")\ncobertura_df.write.format('delta').mode('overwrite').saveAsTable(\"COBERTURA\")\navaliacao_df.write.format('delta').mode('overwrite').saveAsTable(\"AVALIACAO\")\n</code></pre>"},{"location":"obt/#criacao-da-tabela-obt-operational-business-table","title":"Cria\u00e7\u00e3o da Tabela OBT (Operational Business Table)","text":"<p>A tabela OBT \u00e9 criada para consolidar as informa\u00e7\u00f5es agregadas e gerar insights de neg\u00f3cios.</p> <pre><code>CREATE OR REPLACE TABLE satcseguroimoveis_obt (\n    ANO INT,\n    MES STRING,\n    TOTAL_DE_VALOR_DE_SINISTRO DECIMAL(38,2) NOT NULL,\n    VALOR_TOTAL_DAS_APOLICES DECIMAL(38,2) NOT NULL,\n    TOTAL_DE_ATIVOS DECIMAL(38,2) NOT NULL,\n    TOTAL_DE_PASSIVOS DECIMAL(38,2) NOT NULL,\n    NUMERO_TOTAL_DE_IMOVEIS INT NOT NULL,\n    APOLICES_FINALIZADAS INT NOT NULL,\n    NUMERO_DE_SINISTROS INT NOT NULL,\n    NUMERO_DE_APOLICES_VENDIDAS INT NOT NULL,\n    VALOR_MEDIO_DE_PREMIO DECIMAL(38,6) NOT NULL\n)\nUSING DELTA;\n</code></pre>"},{"location":"obt/#insercao-de-dados-na-tabela-obt","title":"Inser\u00e7\u00e3o de Dados na Tabela OBT","text":"<p>Os dados s\u00e3o inseridos na tabela OBT a partir das tabelas silver,  utilizando agrega\u00e7\u00f5es e jun\u00e7\u00f5es para consolidar a informa\u00e7\u00e3o.</p> <pre><code>INSERT INTO satcseguroimoveis_obt\nSELECT \n    YEAR(A.DATA_INICIO) AS ANO,\n    DATE_FORMAT(A.DATA_INICIO, 'MMMM') AS MES,\n    COALESCE(SUM(S.VALOR_SINISTRO), 0) AS TOTAL_DE_VALOR_DE_SINISTRO,\n    COALESCE(SUM(A.VALOR_APOLICE), 0) AS VALOR_TOTAL_DAS_APOLICES,\n    COALESCE(SUM(C.VALOR), 0) AS TOTAL_DE_ATIVOS, \n    COALESCE(SUM(I.VALOR_IMOVEL), 0) AS TOTAL_DE_PASSIVOS, \n    COALESCE(COUNT(AV.CODIGO_IMOVEL), 0) AS NUMERO_TOTAL_DE_IMOVEIS,\n    COALESCE(SUM(CASE WHEN A.DATA_TERMINO &lt;= CURRENT_DATE THEN 1 ELSE 0 END), 0) AS APOLICES_FINALIZADAS, \n    COALESCE(COUNT(DISTINCT S.CODIGO_SINISTRO), 0) AS NUMERO_DE_SINISTROS,\n    COALESCE(COUNT(DISTINCT A.CODIGO_APOLICE), 0) AS NUMERO_DE_APOLICES_VENDIDAS,\n    COALESCE(AVG(A.VALOR_APOLICE), 0) AS VALOR_MEDIO_DE_PREMIO\nFROM \n    APOLICE A\nLEFT JOIN \n    SINISTRO S ON A.CODIGO_APOLICE = S.CODIGO_APOLICE\nLEFT JOIN \n    IMOVEL I ON A.CODIGO_IMOVEL = I.CODIGO_IMOVEL\nLEFT JOIN \n    APOLICE_COBERTURA AC ON A.CODIGO_APOLICE = AC.CODIGO_APOLICE\nLEFT JOIN \n    COBERTURA C ON AC.CODIGO_COBERTURA = C.CODIGO_COBERTURA\nLEFT JOIN \n    AVALIACAO AV ON I.CODIGO_IMOVEL = AV.CODIGO_IMOVEL\nGROUP BY \n    YEAR(A.DATA_INICIO), DATE_FORMAT(A.DATA_INICIO, 'MMMM');\n</code></pre>"},{"location":"obt/#exibicao-dos-dados","title":"Exibi\u00e7\u00e3o dos Dados","text":"<p>Os dados da tabela OBT s\u00e3o exibidos para an\u00e1lise e tomada de decis\u00f5es.</p> ANO MES TOTAL_DE_VALOR_DE_SINISTRO VALOR_TOTAL_DAS_APOLICES TOTAL_DE_ATIVOS TOTAL_DE_PASSIVOS NUMERO_TOTAL_DE_IMOVEIS APOLICES_FINALIZADAS NUMERO_DE_SINISTROS NUMERO_DE_APOLICES_VENDIDAS VALOR_MEDIO_DE_PREMIO 2023 Janeiro 50000.00 300000.00 120000.00 1000000.00 500 50 200 150 2000.000000 2023 Fevereiro 45000.00 280000.00 110000.00 950000.00 480 45 180 140 2000.000000 2023 Mar\u00e7o 55000.00 310000.00 125000.00 1050000.00 510 55 220 160 1937.500000 2023 Abril 47000.00 290000.00 115000.00 970000.00 490 48 190 150 1933.333333 2023 Maio 53000.00 320000.00 130000.00 1080000.00 520 60 210 170 1882.352941 2023 Junho 48000.00 300000.00 120000.00 990000.00 500 50 200 150 2000.000000 2023 Julho 46000.00 275000.00 105000.00 920000.00 470 47 180 140 1964.285714 2023 Agosto 52000.00 310000.00 125000.00 1040000.00 510 55 220 160 1937.500000 2023 Setembro 49000.00 295000.00 115000.00 980000.00 495 49 190 150 1966.666667 2023 Outubro 53000.00 320000.00 130000.00 1070000.00 520 60 210 170 1882.352941"},{"location":"postgres/","title":"Arquitetura Postgres","text":""},{"location":"relational/","title":"Modelo Relacional e Inser\u00e7\u00e3o de Dados","text":"<p>A estrutura incial do banco de dados do projeto cont\u00e9m 8 tabelas, sendo elas as seguintes:</p> <ul> <li><code>cliente</code>: armazena informa\u00e7\u00f5es dos clientes;</li> <li><code>imovel</code>: armazena informa\u00e7\u00f5es dos im\u00f3veis, relacionando-os com propriet\u00e1rios e inquilinos que s\u00e3o clientes;</li> <li><code>apolice</code>: armazena informa\u00e7\u00f5es das ap\u00f3lices de seguros associadas a im\u00f3veis;</li> <li><code>cobertura</code>: armazena informa\u00e7\u00f5es das coberturas de seguro;</li> <li><code>apolice_cobertura</code>: associa\u00e7\u00e3o para o relacionamento muitos-para-muitos entre ap\u00f3lices e coberturas;</li> <li><code>sinistro</code>: armazena informa\u00e7\u00f5es dos sinistros associados a ap\u00f3lices;</li> <li><code>pagamento</code>: armazena informa\u00e7\u00f5es dos pagamentos associados a ap\u00f3lices;</li> <li><code>avaliacao</code>: armazena informa\u00e7\u00f5es das avalia\u00e7\u00f5es dos im\u00f3veis;</li> </ul> <p></p>"},{"location":"relational/#insercao-de-dados","title":"Inser\u00e7\u00e3o de Dados","text":"<p>A partir de um script em Python, s\u00e3o criadas as tabelas e populada toda a cadeia de dados para N clientes.</p> <pre><code>total_clients = 100\n\nclientes = insert_clientes(session, total_clients)\nlog(f\"{len(clientes)} clientes inseridos.\")\n\nimoveis = insert_imoveis(session, clientes, tipos_imovel)\nlog(f\"{len(imoveis)} im\u00f3veis inseridos.\")\n\napolices = insert_avaliacoes_apolices(session, imoveis)\nlog(f\"{len(apolices)} ap\u00f3lices e avalia\u00e7\u00f5es inseridas.\")\n\nsinistros, pagamentos, apolice_coberturas = await insert_sinistros_pagamentos_apolices_coberturas(session, apolices, imoveis, coberturas)\nlog(f\"{len(sinistros)} sinistros, {len(pagamentos)} pagamentos, {len(apolice_coberturas)} apolice_coberturas inseridos.\")\n\nsession.commit()\nlog(\"Todos registros salvos.\")\n</code></pre> <p>Para cada cliente, podem existir de 1 a 4 im\u00f3veis. A partir desses im\u00f3veis, obt\u00e9m-se a mesma quantidade em ap\u00f3lices e avalia\u00e7\u00f5es. Ap\u00f3s isso, por cada ap\u00f3lice, tem-se a cria\u00e7\u00e3o de 0 a 4 sinistros, 1 a 10 tipos de coberturas e 1 pagamento por m\u00eas desde a data de in\u00edcio da ap\u00f3lice at\u00e9 o dia atual.</p> <p>Ao final do processo, a base de dados obteve um total de 337.010 linhas a partir da soma de todas as tabelas.</p> linhas tabela 58332 apolice_cobertura 10 cobertura 18289 sinistro 207253 pagamento 15042 apolice 15042 avaliacao 15042 imovel 8000 cliente"}]}